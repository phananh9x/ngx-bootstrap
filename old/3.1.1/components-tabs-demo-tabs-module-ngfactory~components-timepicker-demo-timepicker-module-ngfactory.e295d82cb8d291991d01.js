(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{fHIT:function(e,n,t){"use strict";t.d(n,"b",function(){return U}),t.d(n,"a",function(){return u}),t.d(n,"e",function(){return O}),t.d(n,"c",function(){return T}),t.d(n,"d",function(){return P});var i=t("CcnG"),s=t("mrSG"),o=t("26FU"),r=t("MwfX"),a=t("gIcY"),c=t("Ip0R"),u=function(){function e(){}return e.prototype.writeValue=function(n){return{type:e.WRITE_VALUE,payload:n}},e.prototype.changeHours=function(n){return{type:e.CHANGE_HOURS,payload:n}},e.prototype.changeMinutes=function(n){return{type:e.CHANGE_MINUTES,payload:n}},e.prototype.changeSeconds=function(n){return{type:e.CHANGE_SECONDS,payload:n}},e.prototype.setTime=function(n){return{type:e.SET_TIME_UNIT,payload:n}},e.prototype.updateControls=function(n){return{type:e.UPDATE_CONTROLS,payload:n}},e.WRITE_VALUE="[timepicker] write value from ng model",e.CHANGE_HOURS="[timepicker] change hours",e.CHANGE_MINUTES="[timepicker] change minutes",e.CHANGE_SECONDS="[timepicker] change seconds",e.SET_TIME_UNIT="[timepicker] set time unit",e.UPDATE_CONTROLS="[timepicker] update controls",e.decorators=[{type:i.w}],e}(),d=10,p=24,h=12,l=60,m=60;function f(e){return!!e&&(!(e instanceof Date&&isNaN(e.getHours()))&&("string"!=typeof e||f(new Date(e))))}function g(e,n){return!(e.min&&n<e.min)&&!(e.max&&n>e.max)}function b(e){return"number"==typeof e?e:parseInt(e,d)}function y(e,n){void 0===n&&(n=!1);var t=b(e);return isNaN(t)||t<0||t>(n?h:p)?NaN:t}function w(e){var n=b(e);return isNaN(n)||n<0||n>l?NaN:n}function v(e){var n=b(e);return isNaN(n)||n<0||n>m?NaN:n}function S(e){return"string"==typeof e?new Date(e):e}function M(e,n){if(!e)return M(x(new Date,0,0,0),n);var t=e.getHours(),i=e.getMinutes(),s=e.getSeconds();return n.hour&&(t=(t+b(n.hour))%p)<0&&(t+=p),n.minute&&(i+=b(n.minute)),n.seconds&&(s+=b(n.seconds)),x(e,t,i,s)}function x(e,n,t,i){return new Date(e.getFullYear(),e.getMonth(),e.getDate(),n,t,i,e.getMilliseconds())}function k(e){var n=e.toString();return n.length>1?n:"0"+n}function I(e,n){return!isNaN(y(e,n))}function N(e){return!isNaN(w(e))}function H(e){return!isNaN(v(e))}function _(e,n,t,i){return void 0===n&&(n="0"),void 0===t&&(t="0"),I(e,i)&&N(n)&&H(t)}function D(e,n){if(e.readonlyInput||e.disabled)return!1;if(n){if("wheel"===n.source&&!e.mousewheel)return!1;if("key"===n.source&&!e.arrowkeys)return!1}return!0}function E(e){return{hourStep:e.hourStep,minuteStep:e.minuteStep,secondsStep:e.secondsStep,readonlyInput:e.readonlyInput,disabled:e.disabled,mousewheel:e.mousewheel,arrowkeys:e.arrowkeys,showSpinners:e.showSpinners,showMeridian:e.showMeridian,showSeconds:e.showSeconds,meridians:e.meridians,min:e.min,max:e.max}}var T=function(){function e(){this.hourStep=1,this.minuteStep=5,this.secondsStep=10,this.showMeridian=!0,this.meridians=["AM","PM"],this.readonlyInput=!1,this.disabled=!1,this.mousewheel=!0,this.arrowkeys=!0,this.showSpinners=!0,this.showSeconds=!1,this.showMinutes=!0}return e.decorators=[{type:i.w}],e}(),A={value:null,config:new T,controls:{canIncrementHours:!0,canIncrementMinutes:!0,canIncrementSeconds:!0,canDecrementHours:!0,canDecrementMinutes:!0,canDecrementSeconds:!0,canToggleMeridian:!0}};function C(e,n){switch(void 0===e&&(e=A),n.type){case u.WRITE_VALUE:return Object.assign({},e,{value:n.payload});case u.CHANGE_HOURS:if(!D(e.config,n.payload)||(p=n.payload,l=e.controls,!p.step||p.step>0&&!l.canIncrementHours||p.step<0&&!l.canDecrementHours))return e;var t=M(e.value,{hour:n.payload.step});return!e.config.max&&!e.config.min||g(e.config,t)?Object.assign({},e,{value:t}):e;case u.CHANGE_MINUTES:if(!D(e.config,n.payload)||!function(e,n){return!(!e.step||e.step>0&&!n.canIncrementMinutes||e.step<0&&!n.canDecrementMinutes)}(n.payload,e.controls))return e;t=M(e.value,{minute:n.payload.step});return!e.config.max&&!e.config.min||g(e.config,t)?Object.assign({},e,{value:t}):e;case u.CHANGE_SECONDS:if(!D(e.config,n.payload)||!function(e,n){return!(!e.step||e.step>0&&!n.canIncrementSeconds||e.step<0&&!n.canDecrementSeconds)}(n.payload,e.controls))return e;t=M(e.value,{seconds:n.payload.step});return!e.config.max&&!e.config.min||g(e.config,t)?Object.assign({},e,{value:t}):e;case u.SET_TIME_UNIT:if(!D(e.config))return e;t=(o=e.value,r=n.payload,a=y(r.hour),c=w(r.minute),d=v(r.seconds)||0,r.isPM&&(a+=h),o?isNaN(a)||isNaN(c)?o:x(o,a,c,d):isNaN(a)||isNaN(c)?o:x(new Date,a,c,d));return Object.assign({},e,{value:t});case u.UPDATE_CONTROLS:var i=function(e,n){var t=n.min,i=n.max,s=n.hourStep,o=n.minuteStep,r=n.secondsStep,a=n.showSeconds,c={canIncrementHours:!0,canIncrementMinutes:!0,canIncrementSeconds:!0,canDecrementHours:!0,canDecrementMinutes:!0,canDecrementSeconds:!0,canToggleMeridian:!0};if(!e)return c;if(i){var u=M(e,{hour:s});if(c.canIncrementHours=i>u,!c.canIncrementHours){var d=M(e,{minute:o});c.canIncrementMinutes=a?i>d:i>=d}if(!c.canIncrementMinutes){var p=M(e,{seconds:r});c.canIncrementSeconds=i>=p}e.getHours()<12&&(c.canToggleMeridian=M(e,{hour:12})<i)}t&&(u=M(e,{hour:-s}),c.canDecrementHours=t<u,c.canDecrementHours||(d=M(e,{minute:-o}),c.canDecrementMinutes=a?t<d:t<=d),c.canDecrementMinutes||(p=M(e,{seconds:-r}),c.canDecrementSeconds=t<=p),e.getHours()>=12&&(c.canToggleMeridian=M(e,{hour:-12})>t));return c}(e.value,n.payload),s={value:e.value,config:n.payload,controls:i};return e.config.showMeridian!==s.config.showMeridian&&e.value&&(s.value=new Date(e.value)),Object.assign({},e,s);default:return e}var o,r,a,c,d,p,l}var O=function(e){function n(){var n=new o.a({type:"[mini-ngrx] dispatcher init"}),t=new r.a(A,n,C);return e.call(this,n,C,t)||this}return Object(s.c)(n,e),n.decorators=[{type:i.w}],n.ctorParameters=function(){return[]},n}(r.b),V={provide:a.m,useExisting:Object(i.Ja)(function(){return U}),multi:!0},U=function(){function e(e,n,t,s){var o=this;this._store=t,this._timepickerActions=s,this.isValid=new i.r,this.invalidHours=!1,this.invalidMinutes=!1,this.invalidSeconds=!1,this.onChange=Function.prototype,this.onTouched=Function.prototype,Object.assign(this,e),this.timepickerSub=t.select(function(e){return e.value}).subscribe(function(e){o._renderTime(e),o.onChange(e),o._store.dispatch(o._timepickerActions.updateControls(E(o)))}),t.select(function(e){return e.controls}).subscribe(function(e){o.isValid.emit(_(o.hours,o.minutes,o.seconds,o.isPM())),Object.assign(o,e),n.markForCheck()})}return Object.defineProperty(e.prototype,"isSpinnersVisible",{get:function(){return this.showSpinners&&!this.readonlyInput},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isEditable",{get:function(){return!(this.readonlyInput||this.disabled)},enumerable:!0,configurable:!0}),e.prototype.resetValidation=function(){this.invalidHours=!1,this.invalidMinutes=!1,this.invalidSeconds=!1},e.prototype.isPM=function(){return this.showMeridian&&this.meridian===this.meridians[1]},e.prototype.prevDef=function(e){e.preventDefault()},e.prototype.wheelSign=function(e){return-1*Math.sign(e.deltaY)},e.prototype.ngOnChanges=function(e){this._store.dispatch(this._timepickerActions.updateControls(E(this)))},e.prototype.changeHours=function(e,n){void 0===n&&(n=""),this.resetValidation(),this._store.dispatch(this._timepickerActions.changeHours({step:e,source:n}))},e.prototype.changeMinutes=function(e,n){void 0===n&&(n=""),this.resetValidation(),this._store.dispatch(this._timepickerActions.changeMinutes({step:e,source:n}))},e.prototype.changeSeconds=function(e,n){void 0===n&&(n=""),this.resetValidation(),this._store.dispatch(this._timepickerActions.changeSeconds({step:e,source:n}))},e.prototype.updateHours=function(e){if(this.resetValidation(),this.hours=e,!(I(this.hours,this.isPM())&&this.isValidLimit()))return this.invalidHours=!0,this.isValid.emit(!1),void this.onChange(null);this._updateTime()},e.prototype.updateMinutes=function(e){if(this.resetValidation(),this.minutes=e,!(N(this.minutes)&&this.isValidLimit()))return this.invalidMinutes=!0,this.isValid.emit(!1),void this.onChange(null);this._updateTime()},e.prototype.updateSeconds=function(e){if(this.resetValidation(),this.seconds=e,!(H(this.seconds)&&this.isValidLimit()))return this.invalidSeconds=!0,this.isValid.emit(!1),void this.onChange(null);this._updateTime()},e.prototype.isValidLimit=function(){return e={hour:this.hours,minute:this.minutes,seconds:this.seconds,isPM:this.isPM()},n=this.max,t=this.min,i=M(new Date,e),!(n&&i>n||t&&i<t);var e,n,t,i},e.prototype._updateTime=function(){var e=this.showSeconds?this.seconds:void 0,n=this.showMinutes?this.minutes:void 0;if(!_(this.hours,n,e,this.isPM()))return this.isValid.emit(!1),void this.onChange(null);this._store.dispatch(this._timepickerActions.setTime({hour:this.hours,minute:this.minutes,seconds:this.seconds,isPM:this.isPM()}))},e.prototype.toggleMeridian=function(){if(this.showMeridian&&this.isEditable){this._store.dispatch(this._timepickerActions.changeHours({step:12,source:""}))}},e.prototype.writeValue=function(e){f(e)?this._store.dispatch(this._timepickerActions.writeValue(S(e))):null==e&&this._store.dispatch(this._timepickerActions.writeValue(null))},e.prototype.registerOnChange=function(e){this.onChange=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype.setDisabledState=function(e){this.disabled=e},e.prototype.ngOnDestroy=function(){this.timepickerSub.unsubscribe()},e.prototype._renderTime=function(e){if(!f(e))return this.hours="",this.minutes="",this.seconds="",void(this.meridian=this.meridians[0]);var n=S(e),t=n.getHours();this.showMeridian&&(this.meridian=this.meridians[t>=12?1:0],0===(t%=12)&&(t=12)),this.hours=k(t),this.minutes=k(n.getMinutes()),this.seconds=k(n.getUTCSeconds())},e.decorators=[{type:i.l,args:[{selector:"timepicker",changeDetection:i.i.OnPush,providers:[V,O],template:'<table>\n  <tbody>\n  <tr class="text-center" [hidden]="!showSpinners">\n    \x3c!-- increment hours button--\x3e\n    <td>\n      <a class="btn btn-link" [class.disabled]="!canIncrementHours || !isEditable"\n         (click)="changeHours(hourStep)"\n      ><span class="bs-chevron bs-chevron-up"></span></a>\n    </td>\n    \x3c!-- divider --\x3e\n    <td *ngIf="showMinutes">&nbsp;&nbsp;&nbsp;</td>\n    \x3c!-- increment minutes button --\x3e\n    <td *ngIf="showMinutes">\n      <a class="btn btn-link" [class.disabled]="!canIncrementMinutes || !isEditable"\n         (click)="changeMinutes(minuteStep)"\n      ><span class="bs-chevron bs-chevron-up"></span></a>\n    </td>\n    \x3c!-- divider --\x3e\n    <td *ngIf="showSeconds">&nbsp;</td>\n    \x3c!-- increment seconds button --\x3e\n    <td *ngIf="showSeconds">\n      <a class="btn btn-link" [class.disabled]="!canIncrementSeconds || !isEditable"\n         (click)="changeSeconds(secondsStep)">\n        <span class="bs-chevron bs-chevron-up"></span>\n      </a>\n    </td>\n    \x3c!-- space between --\x3e\n    <td *ngIf="showMeridian">&nbsp;&nbsp;&nbsp;</td>\n    \x3c!-- meridian placeholder--\x3e\n    <td *ngIf="showMeridian"></td>\n  </tr>\n  <tr>\n    \x3c!-- hours --\x3e\n    <td class="form-group" [class.has-error]="invalidHours">\n      <input type="text" [class.is-invalid]="invalidHours"\n             class="form-control text-center bs-timepicker-field"\n             placeholder="HH"\n             maxlength="2"\n             [readonly]="readonlyInput"\n             [disabled]="disabled"\n             [value]="hours"\n             (wheel)="prevDef($event);changeHours(hourStep * wheelSign($event), \'wheel\')"\n             (keydown.ArrowUp)="changeHours(hourStep, \'key\')"\n             (keydown.ArrowDown)="changeHours(-hourStep, \'key\')"\n             (change)="updateHours($event.target.value)"></td>\n    \x3c!-- divider --\x3e\n    <td *ngIf="showMinutes">&nbsp;:&nbsp;</td>\n    \x3c!-- minutes --\x3e\n    <td class="form-group" *ngIf="showMinutes" [class.has-error]="invalidMinutes">\n      <input type="text" [class.is-invalid]="invalidMinutes"\n             class="form-control text-center bs-timepicker-field"\n             placeholder="MM"\n             maxlength="2"\n             [readonly]="readonlyInput"\n             [disabled]="disabled"\n             [value]="minutes"\n             (wheel)="prevDef($event);changeMinutes(minuteStep * wheelSign($event), \'wheel\')"\n             (keydown.ArrowUp)="changeMinutes(minuteStep, \'key\')"\n             (keydown.ArrowDown)="changeMinutes(-minuteStep, \'key\')"\n             (change)="updateMinutes($event.target.value)">\n    </td>\n    \x3c!-- divider --\x3e\n    <td *ngIf="showSeconds">&nbsp;:&nbsp;</td>\n    \x3c!-- seconds --\x3e\n    <td class="form-group" *ngIf="showSeconds" [class.has-error]="invalidSeconds">\n      <input type="text" [class.is-invalid]="invalidSeconds"\n             class="form-control text-center bs-timepicker-field"\n             placeholder="SS"\n             maxlength="2"\n             [readonly]="readonlyInput"\n             [disabled]="disabled"\n             [value]="seconds"\n             (wheel)="prevDef($event);changeSeconds(secondsStep * wheelSign($event), \'wheel\')"\n             (keydown.ArrowUp)="changeSeconds(secondsStep, \'key\')"\n             (keydown.ArrowDown)="changeSeconds(-secondsStep, \'key\')"\n             (change)="updateSeconds($event.target.value)">\n    </td>\n    \x3c!-- space between --\x3e\n    <td *ngIf="showMeridian">&nbsp;&nbsp;&nbsp;</td>\n    \x3c!-- meridian --\x3e\n    <td *ngIf="showMeridian">\n      <button type="button" class="btn btn-default text-center"\n              [disabled]="!isEditable || !canToggleMeridian"\n              [class.disabled]="!isEditable || !canToggleMeridian"\n              (click)="toggleMeridian()"\n      >{{ meridian }}\n      </button>\n    </td>\n  </tr>\n  <tr class="text-center" [hidden]="!showSpinners">\n    \x3c!-- decrement hours button--\x3e\n    <td>\n      <a class="btn btn-link" [class.disabled]="!canDecrementHours || !isEditable"\n         (click)="changeHours(-hourStep)">\n        <span class="bs-chevron bs-chevron-down"></span>\n      </a>\n    </td>\n    \x3c!-- divider --\x3e\n    <td *ngIf="showMinutes">&nbsp;&nbsp;&nbsp;</td>\n    \x3c!-- decrement minutes button--\x3e\n    <td *ngIf="showMinutes">\n      <a class="btn btn-link" [class.disabled]="!canDecrementMinutes || !isEditable"\n         (click)="changeMinutes(-minuteStep)">\n        <span class="bs-chevron bs-chevron-down"></span>\n      </a>\n    </td>\n    \x3c!-- divider --\x3e\n    <td *ngIf="showSeconds">&nbsp;</td>\n    \x3c!-- decrement seconds button--\x3e\n    <td *ngIf="showSeconds">\n      <a class="btn btn-link" [class.disabled]="!canDecrementSeconds || !isEditable"\n         (click)="changeSeconds(-secondsStep)">\n        <span class="bs-chevron bs-chevron-down"></span>\n      </a>\n    </td>\n    \x3c!-- space between --\x3e\n    <td *ngIf="showMeridian">&nbsp;&nbsp;&nbsp;</td>\n    \x3c!-- meridian placeholder--\x3e\n    <td *ngIf="showMeridian"></td>\n  </tr>\n  </tbody>\n</table>\n',encapsulation:i.Fa.None,styles:["\n    .bs-chevron {\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n\n    .bs-chevron-up {\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n\n    .bs-chevron-down {\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n\n    .bs-timepicker-field {\n      width: 50px;\n    }\n  "]}]}],e.ctorParameters=function(){return[{type:T},{type:i.j},{type:O},{type:u}]},e.propDecorators={hourStep:[{type:i.z}],minuteStep:[{type:i.z}],secondsStep:[{type:i.z}],readonlyInput:[{type:i.z}],disabled:[{type:i.z}],mousewheel:[{type:i.z}],arrowkeys:[{type:i.z}],showSpinners:[{type:i.z}],showMeridian:[{type:i.z}],showMinutes:[{type:i.z}],showSeconds:[{type:i.z}],meridians:[{type:i.z}],min:[{type:i.z}],max:[{type:i.z}],isValid:[{type:i.K}]},e}(),P=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[T,u,O]}},e.decorators=[{type:i.D,args:[{imports:[c.c],declarations:[U],exports:[U]}]}],e}()}}]);